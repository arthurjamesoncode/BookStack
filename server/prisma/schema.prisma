// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  username     String  @unique @db.VarChar(50)
  passwordHash String  @db.Char(60)
  stacks       Stack[]
  Book         Book[]
}

model Book {
  id           Int     @id @default(autoincrement())
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  primaryStack String  @db.VarChar(8) //one of tbr, current, and finished
  title        String  @db.VarChar(255)
  author       String  @db.VarChar(255)
  totalPages   Int
  currentPage  Int     @default(0)
  bookType     String  @default("paper") @db.VarChar(10)
  publisher    String  @default("") @db.VarChar(255)
  ISBN         String  @default("") @db.VarChar(13)
  OLID         String  @default("") @db.VarChar(15)
  description  String  @default("") @db.Text
  hasImg       Boolean @default(false)
  notes        Note[]

  stacks BookStackJunction[]
}

model Stack {
  id     Int                 @id @default(autoincrement())
  name   String              @db.VarChar(255)
  user   User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  type   String              @db.VarChar(8)
  books  BookStackJunction[]
}

model BookStackJunction {
  book    Book  @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId  Int
  stack   Stack @relation(fields: [stackId], references: [id], onDelete: Cascade)
  stackId Int

  addedAt DateTime @default(now())

  @@id([bookId, stackId])
}

model Note {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId    Int
  text      String   @default("") @db.Text
  page      Int?
  createdAt DateTime @default(now())
}
